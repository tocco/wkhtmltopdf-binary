/*
 * Copyright 2020 Tocco AG
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "de.undercouch.download" version "4.0.2"
}

apply plugin: "java"
apply plugin: 'de.undercouch.download'

import de.undercouch.gradle.tasks.download.Download

sourceCompatibility = 11
targetCompatibility = 11

group = "ch.tocco.wkhtmltopdf.binary"
version = "0.12.5"

sourceSets {
    main {
        java {
            srcDir "src"
        }
    }
}

def majorVersion = "0.12.5"
def minorVersion = "0.12.5-1"

def downloadOrigin = "https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/"

def linuxBuildDir = new File(buildDir.toString(), "linux")
def osxBuildDir = new File(buildDir.toString(), "osx")

task downloadLinuxFile(type: Download) {
    src downloadOrigin + majorVersion + "/wkhtmltox_" + minorVersion + ".buster_amd64.deb"
    dest new File(buildDir, "wkhtmltox.deb")
}

task downloadOsxFile(type: Download) {
    src downloadOrigin + majorVersion + "/wkhtmltox-" + minorVersion + ".macos-cocoa.pkg"
    dest new File(buildDir, "wkhtmltox.pkg")
}

task extractDeb(type: Exec) {
    dependsOn "downloadLinuxFile"

    linuxBuildDir.mkdirs()

    executable "7z"
    args "x", downloadLinuxFile.dest, "-w", "-o" + linuxBuildDir.toString(), "-y"
}

task extractLinuxFile(type: Exec) {
    dependsOn "extractDeb"

    executable "tar"
    args "-xf", new File(linuxBuildDir, "data.tar.xz").toString(),
        "-C", linuxBuildDir.toString(),
        "--strip-components=4"
}

task extractPayload(type: Exec) {
    dependsOn "downloadOsxFile"

    osxBuildDir.mkdirs()
    executable "7z"
    args "x", downloadOsxFile.dest, "-w", "-o" + osxBuildDir.toString(), "-y"
}

task extractTar(type: Exec) {
    dependsOn "extractPayload"

    commandLine "bash", "-c", "( cd ${buildDir.toString()}/osx/; cpio -i; ) <${buildDir.toString()}/osx/Payload~"
}

task extractBinary(type: Exec) {
    dependsOn 'extractTar'

    executable "tar"
    args "-xf", osxBuildDir.toString() + "/usr/local/share/wkhtmltox-installer/wkhtmltox.tar.gz",
            "-C", osxBuildDir.toString(),
            "--strip-components=2"
}

task extractOsxFile() {
    dependsOn "extractBinary"
}

task linuxJar(type: Jar) {
    dependsOn "extractLinuxFile"

    from (sourceSets.main.output) {
        include "**"
    }
    into ("/ch/tocco/wkhtmltopdf/binary") {
        from file(linuxBuildDir.toString() + "/wkhtmltopdf")
    }
    classifier = "linux"
}

task osxJar(type: Jar) {
    dependsOn "extractOsxFile"

    from (sourceSets.main.output) {
        include "**"
    }
    into ("/ch/tocco/wkhtmltopdf/binary") {
        from file(osxBuildDir.toString() + "/wkhtmltopdf")
    }
    classifier = "osx"
}

jar.enabled = false // default jar with java classes only is not useful

artifacts {
    archives linuxJar
    archives osxJar
}
